name: Python Client Release
on:
  workflow_call:

jobs:
  check-version:
    name: Check Version
    runs-on: ubuntu-20.04
    outputs:
      local-version: ${{ steps.get-local-version.outputs.version }}
      remote-version: ${{ steps.get-remote-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Local Version
        id: get-local-version
        working-directory: ./client/python
        run: echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT
      - name: Get Remote Version
        id: get-remote-version
        run: echo "version=$(curl -s https://pypi.org/pypi/mita_client/json | jq -r '.info.version')" >> $GITHUB_OUTPUT

  test:
    name: Test
    needs: [ "check-version" ]
    if: needs.check-version.outputs.local-version != needs.check-version.outputs.remote-version
    uses: ./.github/workflows/client-python-test.yml

  release:
    name: Release
    needs: [ test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          architecture: x64

      - name: Install dependencies
        working-directory: ./client/python
        run: |
          pip install -r requirements.txt
          pip install wheel
          python init.py
          cp ../../LICENSE .
          cp ../../README.md .

      - name: Build package for mita_client
        working-directory: ./client/python
        run: python setup.py sdist bdist_wheel

      - name: Release mita_client to PyPI
        working-directory: ./client/python
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Get the version
        working-directory: ./client/python
        run: |
          VER=$(cat version.txt)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Release to GitHub Release
        working-directory: ./client/python
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "client-python/${{ env.VERSION }}"
          title: "[client-python/${{ env.VERSION }}] Mita Python Client Release"
          prerelease: false
          files: "dist/*"
          draft: true
